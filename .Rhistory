for (numero in secuencia) {
if (numero >= 1) {
suma_2 <- numero + 2
print(suma_2)
} else {
print('no aplica')
}
}
while (numero_2 <4) {
cuentame <- numero_2 +1
print(cuentame)
}
while (secuencia <4) {
cuentame <- secuencia +1
print(cuentame)
}
while (contador <4) {
cuentame <- secuencia +1
contador <- contador + 1
print(cuentame)
}
contador <- 0
while (contador <4) {
cuentame <- secuencia +1
contador <- contador + 1
print(cuentame)
}
knitr::opts_chunk$set(echo = TRUE)
print(a)
print(c(1,2,3))
knitr::opts_chunk$set(echo = TRUE)
vector_valores_futuros <- seq(10000, 100000, by=10000)
vector_valores_futuros
vector_valores_futuros <- seq(10000, 100000, by=10000)
vector_valores_futuros
vector_tasas_interes <- seq(0.05, 0.09, by=0.005)
vector_tasas_interes
vector_tasas_interes <- seq(0.05, 0.09, by=0.005)/12
vector_tasas_interes
vector_periodos <- seq(1,5, by=1)
for (tasa_de_descuento in vector_tasa_de_descuento) {
for (periodos in vector_periodos){
print(valor_futuro, tasa_de_descuento, periodos, valor_presente(valor_futuro, tasa_de_descuento, periodos))
}}}
print(valor_futuro, tasa_de_descuento, periodos, valor_presente(valor_futuro, tasa_de_descuento, periodos))}}}
vector_valores_futuros <- seq(10000, 100000, by=10000)
vector_tasa_de_descuento <- seq(0.05, 0.09, by=0.005)
vector_periodos <- seq(1,5, by=1)
for (valor_futuro in vector_valores_futuros) {
for (tasa_de_descuento in vector_tasa_de_descuento) {
for (periodos in vector_periodos){
print(valor_futuro, tasa_de_descuento, periodos, valor_presente(valor_futuro, tasa_de_descuento, periodos))}}}
return(pv)
valor_presente <- function(valor_futuro,  tasa_de_descuento, numero_periodos) {
pv <- valor_futuro / (1 + tasa_de_descuento)^numero_periodos
return(pv)
}
for (valor_futuro in vector_valores_futuros) {
for (tasa_de_descuento in vector_tasa_de_descuento) {
for (periodos in vector_periodos){
print(valor_futuro, tasa_de_descuento, periodos, valor_presente(valor_futuro, tasa_de_descuento, periodos))}}}
vector_periodos <- seq(1,5, by=1)
for (valor_futuro in vector_valores_futuros) {
for (tasa_de_descuento in vector_tasa_de_descuento) {
for (periodos in vector_periodos){
print(valor_futuro, tasa_de_descuento, periodos, valor_presente(valor_futuro, tasa_de_descuento, periodos))
}}}
vector_valores_futuros <- seq(10000, 100000, by=10000)
vector_tasa_de_descuento <- seq(0.05, 0.09, by=0.005)
vector_periodos <- seq(1,5, by=1)
for (valor_futuro in vector_valores_futuros) {
for (tasa_de_descuento in vector_tasa_de_descuento) {
for (periodos in vector_periodos){
print(paste(valor_futuro, tasa_de_descuento, periodos), valor_presente(valor_futuro, tasa_de_descuento, periodos))
}}}
vector_valores_futuros
format(vector_valores_futuros, scientific = FALSE)
as.numeric(format(vector_valores_futuros, scientific = FALSE))
typeof(format(vector_valores_futuros, scientific = FALSE))
for (valor_futuro in vector_valores_futuros) {
for (tasa_de_descuento in vector_tasa_de_descuento) {
for (periodos in vector_periodos){
loop <- paste(valor_futuro, tasa_de_descuento, periodos)
print(loop, valor_presente(valor_futuro, tasa_de_descuento, periodos))
}}}
for (valor_futuro in vector_valores_futuros) {
for (tasa_de_descuento in vector_tasa_de_descuento) {
for (periodos in vector_periodos){
loop <- paste(valor_futuro, tasa_de_descuento, periodos)
print(loop, valor_presente(valor_futuro, tasa_de_descuento, periodos), digits = 7)
}}}
for (valor_futuro in vector_valores_futuros) {
for (tasa_de_descuento in vector_tasa_de_descuento) {
for (periodos in vector_periodos){
loop <- paste("Valor Futuro:", valor_futuro, "Tasa de Descuento:", tasa_de_descuento, "Periodos:", periodos)
print(loop, valor_presente(valor_futuro, tasa_de_descuento, periodos), digits = 7)
}}}
for (valor_futuro in vector_valores_futuros) {
for (tasa_de_descuento in vector_tasa_de_descuento) {
for (periodos in vector_periodos){
loop <- paste("Valor Futuro:", valor_futuro, "Tasa de Descuento:", tasa_de_descuento, "Periodos:", periodos)
print(loop, valor_presente(valor_futuro, tasa_de_descuento, periodos), digits = 788)
}}}
for (valor_futuro in vector_valores_futuros) {
for (tasa_de_descuento in vector_tasa_de_descuento) {
for (periodos in vector_periodos){
loop <- paste("Valor Futuro:", valor_futuro, "Tasa de Descuento:", tasa_de_descuento, "Periodos:", periodos)
print(loop, valor_presente(valor_futuro, tasa_de_descuento, periodos), digits = 89)
}}}
for (valor_futuro in vector_valores_futuros) {
for (tasa_de_descuento in vector_tasa_de_descuento) {
for (periodos in vector_periodos){
loop <- paste("Valor Futuro:", valor_futuro, "Tasa de Descuento:", tasa_de_descuento, "Periodos:", periodos)
valor_presente <- valor_presente(valor_futuro, tasa_de_descuento, periodo)
print(loop, valor_presente)
}}}
vector_periodos <- seq(1,5, by=1)
for (valor_futuro in vector_valores_futuros) {
for (tasa_de_descuento in vector_tasa_de_descuento) {
for (periodos in vector_periodos){
loop <- paste("Valor Futuro:", valor_futuro, "Tasa de Descuento:", tasa_de_descuento, "Periodos:", periodos)
valor_presente <- valor_presente(valor_futuro, tasa_de_descuento, periodos)
print(loop, valor_presente)
}}}
for (valor_futuro in vector_valores_futuros) {
for (tasa_de_descuento in vector_tasa_de_descuento) {
for (periodos in vector_periodos){
loop <- paste("Valor Futuro:", valor_futuro, "Tasa de Descuento:", tasa_de_descuento, "Periodos:", periodos)
valor_presente <- valor_presente(valor_futuro, tasa_de_descuento, periodos)
print(valor_presente)
}}}
vector_valores_futuros <- seq(100, 1000, by=100)
vector_tasa_de_descuento <- seq(0.05, 0.09, by=0.005)
vector_periodos <- seq(1,5, by=1)
for (valor_futuro in vector_valores_futuros) {
for (tasa_de_descuento in vector_tasa_de_descuento) {
for (periodos in vector_periodos){
loop <- paste("Valor Futuro:", valor_futuro, "Tasa de Descuento:", tasa_de_descuento, "Periodos:", periodos)
valor_presente <- valor_presente(valor_futuro, tasa_de_descuento, periodos)
print(valor_presente)
}}}
valor_presente <- function(valor_futuro,  tasa_de_descuento, numero_periodos) {
pv <- valor_futuro / (1 + tasa_de_descuento)^numero_periodos
return(pv)
}
for (valor_futuro in vector_valores_futuros) {
for (tasa_de_descuento in vector_tasa_de_descuento) {
for (periodos in vector_periodos){
loop <- paste("Valor Futuro:", valor_futuro, "Tasa de Descuento:", tasa_de_descuento, "Periodos:", periodos)
valor_presente <- valor_presente(valor_futuro, tasa_de_descuento, periodos)
print(valor_presente)
}}}
valor_presente <- function(valor_futuro,  tasa_de_descuento, numero_periodos) {
pv <- valor_futuro / (1 + tasa_de_descuento)^numero_periodos
return(pv)
}
for (valor_futuro in vector_valores_futuros) {
for (tasa_de_descuento in vector_tasa_de_descuento) {
for (periodos in vector_periodos){
loop <- paste("Valor Futuro:", valor_futuro, "Tasa de Descuento:", tasa_de_descuento, "Periodos:", periodos)
resultado <- valor_presente(valor_futuro, tasa_de_descuento, periodos)
print(resultado)
}}}
for (valor_futuro in vector_valores_futuros) {
for (tasa_de_descuento in vector_tasa_de_descuento) {
for (periodos in vector_periodos){
vector_valor_presente <- paste("Valor Futuro:", valor_futuro, "Tasa de Descuento:", tasa_de_descuento, "Periodos:", periodos, "Valor Presente:", valor_presente(valor_futuro, tasa_de_descuento, periodos))
print(vector_valor_presente)
}}}
vector_valor_presente <- paste("Valor Futuro:", valor_futuro,
"Tasa de Descuento:", tasa_de_descuento,
"Periodos:", periodos,
"Valor Presente:",
valor_presente(valor_futuro, tasa_de_descuento, periodos))
vector_valores_futuros <- seq(100, 1000, by=100)
vector_tasa_de_descuento <- seq(0.05, 0.09, by=0.005)
vector_periodos <- seq(1,5, by=1)
for (valor_futuro in vector_valores_futuros) {
for (tasa_de_descuento in vector_tasa_de_descuento) {
for (periodos in vector_periodos){
vector_valor_presente <- paste("Valor Futuro:", valor_futuro,
"Tasa de Descuento:", tasa_de_descuento,
"Periodos:", periodos,
"Valor Presente:",
valor_presente(valor_futuro, tasa_de_descuento, periodos))
print(vector_valor_presente)
}}}
vector_valores_futuros <- seq(100, 1000, by=100)
vector_tasa_de_descuento <- seq(0.05, 0.09, by=0.005)
vector_periodos <- seq(1,5, by=1)
contador_iteraciones <- 0
for (valor_futuro in vector_valores_futuros) {
for (tasa_de_descuento in vector_tasa_de_descuento) {
for (periodos in vector_periodos){
contador_iteraciones <- contador_iteraciones + 1
vector_valor_presente <- paste("iteracion:", contador_iteraciones,
"Valor Futuro:", valor_futuro,
"Tasa de Descuento:", tasa_de_descuento,
"Periodos:", periodos,
"Valor Presente:",
valor_presente(valor_futuro, tasa_de_descuento, periodos))
print(vector_valor_presente)
}}}
knitr::opts_chunk$set(echo = TRUE)
secuencia
vector_1 <- c(1,2,3,4,5,6)
vector_2 <- c(TRUE, FALSE, TRUE)
vector_3 <- c("mi", "nombre", "es", "andres")
vector_4 <- c(1,2, "andres")
secuencia <- seq(from=1, to=7, by=1)
secuencia
matriz_1 <- matrix(c(1,2,3,4,5,6,7,8,9), nrow=3, ncol= 3)
matriz_2 <- matrix(c(1,2,3,4,5,6,7,8,9), nrow=3, ncol= 3)
matriz_1 + matriz_2
matriz_logica <- matrix(c(TRUE, FALSE, TRUE, TRUE), nrow=2, ncol= 2)
matriz_logica
data_frame_1 <- data.frame(
nombre= c("andres", "jorge", "maria"),
edad= seq(from=31, to=33, by=1),
casado= c(TRUE, TRUE, FALSE)
)
data_frame_1
mi_primera_lista <- list(
matriz=  matriz_1,
data= data_frame_1,
vector=  vector_1,
otro_vector= vector_2
)
mi_primera_lista$matriz
mi_primera_lista[[4]]
library(readxl)
letras_bc_consolidado_raw <- read_excel("Semana 2/data/letras_bc_consolidado_raw.xlsx")
View(letras_bc_consolidado_raw)
letras_bc_consolidado_raw <- letras_bc_consolidado_raw[2:nrow(letras_bc_consolidado_raw), 2:7]
View(letras_bc_consolidado_raw)
letras_bc_consolidado_raw <- read_excel("Semana 2/data/letras_bc_consolidado_raw.xlsx")
letras_bc_consolidado_raw <- letras_bc_consolidado_raw[5:nrow(letras_bc_consolidado_raw), 2:7]
letras_bc_consolidado_raw <- read_excel("Semana 2/data/letras_bc_consolidado_raw.xlsx")
letras_bc_consolidado_raw <- letras_bc_consolidado_raw[5:nrow(letras_bc_consolidado_raw), 2:7]
colnames(letras_bc_consolidado_raw) <- c("Fecha de Subasta",
"Fecha Liquidacion",
"Monto Subastado",
"Monto Adjudicado",
"Rendimiento PPA")
letras_bc_consolidado_raw <- na.omit(letras_bc_consolidado_raw)
letras_bc_consolidado_raw <- read_excel("Semana 2/data/letras_bc_consolidado_raw.xlsx")
letras_bc_consolidado_raw <- letras_bc_consolidado_raw[5:nrow(letras_bc_consolidado_raw), 2:7]
colnames(letras_bc_consolidado_raw) <- c("Fecha de Subasta",
"Fecha Liquidacion",
"Monto Subastado",
"Monto Demandado",
"Monto Adjudicado",
"Rendimiento PPA")
letras_bc_consolidado_raw <- na.omit(letras_bc_consolidado_raw)
##Montos Colocados y Tasa de Rendimiento Promedio Ponderada 2007-2023
letras_bc_consolidado_raw <- read_excel("Semana 2/data/letras_bc_consolidado_raw.xlsx")
letras_bc_consolidado_raw <- letras_bc_consolidado_raw[5:nrow(letras_bc_consolidado_raw), 2:7]
colnames(letras_bc_consolidado_raw) <- c("FechadeSubasta",
"FechaLiquidacion",
"MontoSubastado",
"MontoDemandado",
"MontoAdjudicado",
"RendimientoPPA")
letras_bc_consolidado_raw <- na.omit(letras_bc_consolidado_raw)
library(stringr)
letras_bc_consolidado_raw$fecha_formato_raro <-  ifelse(str_detect(letras_bc_consolidado_raw$FechadeSubasta, "/"), 1, 0 )
letras_bc_consolidado_raw <- read_excel("Semana 2/data/letras_bc_consolidado_raw.xlsx")
letras_bc_consolidado_raw <- letras_bc_consolidado_raw[5:nrow(letras_bc_consolidado_raw), 2:7]
colnames(letras_bc_consolidado_raw) <- c("FechadeSubasta",
"FechaLiquidacion",
"MontoSubastado",
"MontoDemandado",
"MontoAdjudicado",
"RendimientoPPA")
letras_bc_consolidado_raw <- na.omit(letras_bc_consolidado_raw)
letras_bc_consolidado_raw$FechadeSubasta_formato <-  ifelse(str_detect(letras_bc_consolidado_raw$FechadeSubasta, "/"), 1, 0 )
letras_bc_consolidado_raw$FechaLiquidacion_formato <-  ifelse(str_detect(letras_bc_consolidado_raw$FechaLiquidacion, "/"), 1, 0 )
letras_bc_consolidado_raw$ano_subasta <- ifelse(
letras_bc_consolidado_raw$FechadeSubasta_formato=1,
letras_bc_consolidado_raw$ano_subasta <- ifelse(
letras_bc_consolidado_raw$FechadeSubasta_formato==1,
substrRight(letras_bc_consolidado_raw$FechadeSubasta, 4), ##Toma los 4 ultimos numeros del string de fecha
year(as.Date(letras_bc_consolidado_raw$FechadeSubasta, origin = "1899-12-30"))
)
substrRight <- function(x, n){
substr(x, nchar(x)-n+1, nchar(x))
}
##Creando la fecha de la subasta
letras_bc_consolidado_raw$ano_subasta <- ifelse(
letras_bc_consolidado_raw$FechadeSubasta_formato==1,
substrRight(letras_bc_consolidado_raw$FechadeSubasta, 4), ##Toma los 4 ultimos numeros del string de fecha
year(as.Date(letras_bc_consolidado_raw$FechadeSubasta, origin = "1899-12-30"))
)
library(lubridate)
letras_bc_consolidado_raw$ano_subasta <- ifelse(
letras_bc_consolidado_raw$FechadeSubasta_formato==1,
substrRight(letras_bc_consolidado_raw$FechadeSubasta, 4), ##Toma los 4 ultimos numeros del string de fecha
year(as.Date(letras_bc_consolidado_raw$FechadeSubasta, origin = "1899-12-30"))
)
fechassubastaorg <- letras_bc_consolidado_raw[letras_bc_consolidado_raw$FechadeSubasta_formato==1, ]
fechassubastaexcel <- letras_bc_consolidado_raw[letras_bc_consolidado_raw$FechadeSubasta_formato !=1, ]
View(fechassubastaorg)
fechassubastaorg <- letras_bc_consolidado_raw[letras_bc_consolidado_raw$FechadeSubasta_formato==1, ]
fechassubastaorg$ano_subasta <- substrRight(fechassubastaorg$FechadeSubasta, 4)
View(fechassubastaorg)
fechassubastaorg$FechadeSubasta2 <- as.Date(fechassubastaorg$FechadeSubasta)
View(fechassubastaorg)
letras_bc_consolidado_raw <- read_excel("Semana 2/data/letras_bc_consolidado_raw.xlsx")
View(letras_bc_consolidado_raw)
##Valor Presente
valor_presente <- function(valor_futuro, tasa_de_descuento, numero_de_periodos){
vp <- valor_futuro / (1 + tasa_de_descuento)^numero_de_periodos
return(vp)
}
vf <- 100
tasa_de_descuento <- 0.05
numero_de_periodos <- 3
valor_presente(vf,tasa_de_descuento,  numero_de_periodos)
vector_valor_futuros <- seq(100, 1000, by= 100)
vector_valor_futuros
vector_valor_futuros <- seq(100, 1000, by= 100)
vector_tasa_de_descuento <- seq(0.05, 0.09, by=0.005)
vector_periodos <- seq(1, 5, by=1)
valor_presente(vector_valor_futuros,vector_tasa_de_descuento,  vector_periodos)
vector_valor_futuros <- seq(100, 1000, by= 100)
vector_tasa_de_descuento <- seq(0.05, 0.09, by=0.005)
vector_periodos <- seq(1, 5, by=1)
for (valor_futuro in vector_valor_futuros){
for (tasa_de_descuento in vector_tasa_de_descuento){
for(periodos in vector_periodos){
vector_valor_presente <- paste("Valor Futuro:", valor_futuro,
"Tasa de descuento:", tasa_de_descuento,
"Periodos:", periodos,
"Valor Presente:", valor_presente(
valor_futuro,
tasa_de_descuento,
periodos))
print(vector_valor_presente)
}}}
letras_bc <- read.table("Semana 2/data/letras_bc_consolidado_clean.csv")
##Leemos la tabla de letras
letras_bc <- read.table("Semana 2/data/letras_bc_consolidado_clean.csv")
View(letras_bc)
##Importacion
letras_bc <- read.table("Semana 2/data/letras_bc_consolidado_clean.csv")
View(letras_bc)
View(letras_bc)
View(letras_bc)
View(letras_bc)
##Slicing
letras_bc[3,]
##Slicing
letras_bc[1:3,]
letras_monto_subastado_500 <- letras_bc[letras_bc$MontoSubastado==5000 ,]
View(letras_monto_subastado_500)
letras_monto_subastado_500 <- letras_bc[letras_bc$MontoSubastado==5000, 1:3]
letras_monto_subastado_500 <- letras_bc[letras_bc$MontoSubastado==5000, ]
#Filtering
letras_monto_subastado_500 <- subset(letras_bc, MontoSubastado=5000)
View(letras_monto_subastado_500)
#Filtering
letras_monto_subastado_500 <- subset(letras_bc, MontoSubastado==5000)
##Creacion de columnas
letras_monto_subastado_500$RendimientoPPA <- letras_monto_subastado_500$RendimientoPPA *100
letras_monto_subastado_500$RendimientoPPA2 <- 1-(letras_monto_subastado_500$RendimientoPPA *100)
letras_bc[3, 3] <- "hola"
View(letras_bc)
##Importacion
letras_bc <- read.table("Semana 2/data/letras_bc_consolidado_clean.csv")
colnames(letras_bc)
colnames(letras_bc) <- c("1", "2", "3", "4", "5",
"6")
names(letras_bc) <- c("1", "2", "3", "4", "5",
"6")
names(letras_bc)
letras_bc <- read.table("Semana 2/data/letras_bc_consolidado_clean.csv")
names(letras_bc)
names(letras_bc)
names(letras_bc)[1:3]
names(letras_bc)[1:3] <- c("fecha", "fecha2", "monto")
names(letras_bc)
##Importacion
letras_bc <- read.table("Semana 2/data/letras_bc_consolidado_clean.csv")
colnames(letras_bc)
letras_bc2 <- letras_bc
colnames(letras_bc2)[1:2]
colnames(letras_bc2)[1:2] <- c("columna1", "columna2")
letras_bc2
colnames(letras_bc2)
setdif(colnames(letras_bc), colnames(letras_bc2))
setdiff(colnames(letras_bc), colnames(letras_bc2))
intersect(
colnames(letras_bc), colnames(letras_bc2)
)
nuevas_letras <- data.frame(
"FechaSubasta"= c("2023-06-01","2023-06-12", "2023-06-14"),
"FechaLiquidacion"= c("2023-06-01","2023-06-12", "2023-06-14"),
"MontoSubastado"= c(7400, 8000, 2400),
"MontoDemandado"= c(2000, 1500, 2222),
"MontoAdjudicado"= c(1800, 1499, 2200),
"RendimientoPPA"= c(0.05, 0.0555, 0.087)
)
View(nuevas_letras)
setdiff(colnames(letras_bc), colnames(nuevas_letras))
intersect(colnames(letras_bc), colnames(nuevas_letras))
colnames(letras_bc)
colnames(nuevas_letras)[1]  <- "FechadeSubasta"
setdiff(colnames(letras_bc), colnames(nuevas_letras))
nuevas_letras_completo <- rbind(letras_bc, nuevas_letras)
View(nuevas_letras_completo)
nueva_info_letras <- data.frame(
rankeo= seq(1, nrow(letras_bc), by= 1)
)
View(nueva_info_letras)
View(letras_bc)
nrow(nueva_info_letras) - nrow(letras_bc)
nuevas_letras_rank <- cbind(letras_bc, nueva_info_letras)
View(nuevas_letras_rank)
min(letras_bc$FechadeSubasta)
max(letras_bc$FechadeSubasta)
seq(as.Date(min(letras_bc$FechadeSubasta)),as.Date(max(letras_bc$FechadeSubasta)), by="day" )
length(seq(as.Date(min(letras_bc$FechadeSubasta)),as.Date(max(letras_bc$FechadeSubasta)), by="day" ))
sample(c(1,0),length(seq(as.Date(min(letras_bc$FechadeSubasta)),as.Date(max(letras_bc$FechadeSubasta)), by="day" )), TRUE)
subasta_desierta <- data.frame(
"FechadeSubasta" =
seq(as.Date(min(letras_bc$FechadeSubasta)),as.Date(max(letras_bc$FechadeSubasta)), by="day" ),
"DeclaradaDesierta"= sample(c(1,0),length(seq(as.Date(min(letras_bc$FechadeSubasta)),as.Date(max(letras_bc$FechadeSubasta)), by="day" )), TRUE)
)
View(subasta_desierta)
intersect(colnames(letras_bc), colnames(subasta_desierta))
merge(letras_bc, subasta_desierta, all.x=TRUE, all.y=FALSE)
letras_desiertas <- merge(letras_bc, subasta_desierta, all.x=TRUE, all.y=FALSE)
View(letras_desiertas)
typeof(letras_bc$FechadeSubasta)
typeof(subasta_desierta$FechadeSubasta)
letras_bc$FechadeSubasta <- as.Date(letras_bc$FechadeSubasta)
letras_desiertas <- merge(letras_bc, subasta_desierta, all.x=TRUE, all.y=FALSE)
View(letras_desiertas)
typeof(subasta_desierta$FechadeSubasta)
typeof(letras_bc$FechadeSubasta)
##Importacion
letras_bc <- read.table("Semana 2/data/letras_bc_consolidado_clean.csv")
enacion - rbind()
nuevas_letras <- data.frame(
"FechaSubasta"= c("2023-06-01","2023-06-12", "2023-06-14"),
"FechaLiquidacion"= c("2023-06-01","2023-06-12", "2023-06-14"),
"MontoSubastado"= c(7400, 8000, 2400),
"MontoDemandado"= c(2000, 1500, 2222),
"MontoAdjudicado"= c(1800, 1499, 2200),
"RendimientoPPA"= c(0.05, 0.0555, 0.087)
)
setdiff(colnames(letras_bc), colnames(nuevas_letras))
intersect(colnames(letras_bc), colnames(nuevas_letras))
colnames(nuevas_letras)[1]  <- "FechadeSubasta"
nuevas_letras_completo <- rbind(letras_bc, nuevas_letras)
nueva_info_letras <- data.frame(
rankeo= seq(1, nrow(letras_bc), by=1)
)
View(nuevas_letras_completo)
View(nueva_info_letras)
cbind(letras_bc, nueva_info_letras)
View(cbind(letras_bc, nueva_info_letras))
min(letras_bc$FechadeSubasta)
max(letras_bc$FechadeSubasta)
seq(as.Date(min(letras_bc$FechadeSubasta)),as.Date(max(letras_bc$FechadeSubasta)), by="day" )
length(seq(as.Date(min(letras_bc$FechadeSubasta)),as.Date(max(letras_bc$FechadeSubasta)), by="day" ))
sample(c(1,0),length(seq(as.Date(min(letras_bc$FechadeSubasta)),as.Date(max(letras_bc$FechadeSubasta)),
by="day" )), TRUE)
subasta_desierta <- data.frame(
"FechadeSubasta" = seq(as.Date(min(letras_bc$FechadeSubasta)),as.Date(max(letras_bc$FechadeSubasta)), by="day" ),
"DeclaradaDesierta"= sample(c(1,0),length(seq(as.Date(min(letras_bc$FechadeSubasta)),as.Date(max(letras_bc$FechadeSubasta)),
by="day" )), TRUE)
)
View(subasta_desierta)
intersect(colnames(letras_bc), colnames(subasta_desierta))
View(merge(letras_bc, subasta_desierta, all.x=TRUE, all.y= FALSE))
typeof(letras_bc$FechadeSubasta)
typeof(subasta_desierta$FechadeSubasta)
typeof(letras_bc$FechadeSubasta)
typeof(subasta_desierta$FechadeSubasta)
letras_bc$FechadeSubasta <- as.Date(letras_bc$FechadeSubasta)
typeof(letras_bc$FechadeSubasta)
typeof(subasta_desierta$FechadeSubasta)
View(merge(letras_bc, subasta_desierta, all.x=TRUE, all.y= FALSE))
library(tidyverse)
letras_bc <- read.table("Semana 2/data/letras_bc_consolidado_clean.csv")
colnames(letras_bc)
letras_bc |>
select(FechadeSubasta, MontoDemandado, MontoAdjudicado)
###
View(letras_bc |> select(FechadeSubasta, MontoDemandado, MontoAdjudicado))
###
letras_bc_monto_5000<-  letras_bc |>
select(FechadeSubasta, MontoDemandado, MontoAdjudicado)  |>
filter(MontoDemandado==5000)
View(letras_bc_monto_5000)
letras_bc_monto_5000<-  letras_bc |>
select(FechadeSubasta,MontoSubastado, MontoDemandado, MontoAdjudicado)  |>
filter(MontoSubastado==5000)
View(letras_bc_monto_5000)
letras_bc_monto_5000<-  letras_bc |>
select(FechadeSubasta,MontoSubastado, MontoDemandado, MontoAdjudicado)  |>
filter(MontoSubastado==5000) |>
select(FechadeSubasta,MontoSubastado)
View(letras_bc_monto_5000)
glimpse(letras_bc)
letras_bc_monto_5000<-  letras_bc |>
select(FechadeSubasta,MontoSubastado, MontoDemandado, MontoAdjudicado, RendimientoPPA)  |>
filter(MontoSubastado==5000) |>
mutate(Rendimiento100 = RendimientoPPA*100,
columna_ejemplo= 1 )
View(letras_bc_monto_5000)
