) +
theme_classic()
plot(titulos_semanales)
titulos_dias_trans_chart <- ggplot(titulos_dias_transados, aes(y =dias_transado,
x = codigo)) +
geom_bar(stat = "identity", fill = "grey") +
labs(title = "Número de días en los que el instrumento de renta fija fue transado",
subtitle =  paste("De", min(opdiarias_rf$fecha_operacion), "a", max(opdiarias_rf[opdiarias_rf$fecha_operacion < as.Date("2023-05-22"),]$fecha_operacion)),
y = "Número de días",
x = "Cod. Local")  +
geom_text(aes(label = dias_transado),
vjust = 0.5,
color = "black",
size= 3) +
coord_flip() +
theme_classic()
plot(titulos_dias_trans_chart)
##Cantidad de dias en los que se transo
titulos_dias_transados <- opdiarias_rf |>
select(fecha_operacion,
"codigo"= `Cód. Local`,
) %>%
filter(fecha_operacion < as.Date("2023-05-22")) |>
group_by(codigo) |>
summarise(dias_transado= n_distinct(fecha_operacion)) %>%
# arrange(desc(dias_transado)) %>%
filter(dias_transado > 6 ) %>%
mutate(codigo = fct_reorder(codigo, dias_transado))
titulos_dias_trans_chart <- ggplot(titulos_dias_transados, aes(y =dias_transado,
x = codigo)) +
geom_bar(stat = "identity", fill = "grey") +
labs(title = "Número de días en los que el instrumento de renta fija fue transado",
subtitle =  paste("De", min(opdiarias_rf$fecha_operacion), "a", max(opdiarias_rf[opdiarias_rf$fecha_operacion < as.Date("2023-05-22"),]$fecha_operacion)),
y = "Número de días",
x = "Cod. Local")  +
geom_text(aes(label = dias_transado),
vjust = 0.5,
color = "black",
size= 3) +
coord_flip() +
theme_classic()
plot(titulos_dias_trans_chart)
titulos_semanales <- ggplot(
data_barras, aes(x= as.factor(semana), y= cantidad_titulos)) +
geom_bar(stat = "identity", fill="grey") +
geom_hline(yintercept = promedio_titulos,
linetype= "dashed",
color= "red",
linewidth= 0.5) +
labs(
title= titulo,
subtitle =  subtitulo,
x= x_label,
y= y_label
) +
geom_text(aes(label= cantidad_titulos))+
theme_classic()
plot(titulos_semanales)
titulos_semanales <- ggplot(
data_barras, aes(x= as.factor(semana), y= cantidad_titulos)) +
geom_bar(stat = "identity", fill="grey") +
geom_hline(yintercept = promedio_titulos,
linetype= "dashed",
color= "red",
linewidth= 0.5) +
labs(
title= titulo,
subtitle =  subtitulo,
x= x_label,
y= y_label
) +
geom_text(aes(label= cantidad_titulos), vjust= -0.5,
color= "black")+
theme_classic()
plot(titulos_semanales)
#install.packages("quantmod")
library(quantmod)
FAANG <- c("AAPL", "GOOGL", "AMZN", "META", "NFLX")
start_date <- "2022-01-01"
end_date <- "2023-05-31"
getSymbols(FAANG, from=start_date, to= end_date)
datos <-  merge(AAPL, AMZN)
chartSeries(datos, theme="white")
addSMA(n=50, on=2)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(quantmod)
library(tidyverse)
FAANG <- c("AAPL", "GOOGL", "AMZN", "META", "NFLX")
fecha_inicio <- "2022-01-01"
fecha_finalizacion <- today()
# Utilizando la funcion Cl obtenemos el precio de cierre de cada dia de las acciones FAANG
FAANG <- merge(Cl(AAPL), Cl(GOOGL), Cl(AMZN), Cl(META), Cl(NFLX))
head(FAANG)
returns <- dailyReturn(Cl(GOOGL))
chartSeries(GOOGL, theme="white", name = "Retornos Diarios de Google")
returns <- dailyReturn(Cl(AMZN))
chartSeries(GOOGL, theme="white", name = "Retornos Diarios de Amazon")
addSMA(n = 10, on = 1, with.col = Cl, overlay = TRUE, col = "blue")
addSMA(n = 60, on = 1, with.col = Cl, overlay = TRUE, col = "black")
SMA()
returns <- dailyReturn(Cl(META))
chartSeries(META, theme="white", name = "Retornos Diarios de META")
#addBBands(n = 10, sd = 2, ma = "SMA", draw = 'bands', on = -1)
addBBands(n = 60, sd = 1, ma = "SMA", draw = 'bands', on = -1)
BBands(Cl(MSFT), n = 20, sd = 2)
library(lubridate)
# Utilizando la funcion Cl obtenemos el precio de cierre de cada dia de las acciones FAANG
FAANG <- merge(Cl(AAPL), Cl(GOOGL), Cl(AMZN), Cl(META), Cl(NFLX))
head(FAANG)
returns <- dailyReturn(Cl(GOOGL))
chartSeries(GOOGL, theme="white", name = "Retornos Diarios de Google")
returns <- dailyReturn(Cl(AMZN))
chartSeries(GOOGL, theme="white", name = "Retornos Diarios de Amazon")
addSMA(n = 10, on = 1, with.col = Cl, overlay = TRUE, col = "blue")
addSMA(n = 60, on = 1, with.col = Cl, overlay = TRUE, col = "black")
SMA()
returns <- dailyReturn(Cl(META))
chartSeries(META, theme="white", name = "Retornos Diarios de META")
#addBBands(n = 10, sd = 2, ma = "SMA", draw = 'bands', on = -1)
addBBands(n = 60, sd = 1, ma = "SMA", draw = 'bands', on = -1)
BBands(Cl(MSFT), n = 20, sd = 2)
returns <- dailyReturn(Cl(META))
chartSeries(META, theme="white", name = "Retornos Diarios de META")
#addBBands(n = 10, sd = 2, ma = "SMA", draw = 'bands', on = -1)
addBBands(n = 60, sd = 1, ma = "SMA", draw = 'bands', on = -1)
# BBands(Cl(MSFT), n = 20, sd = 2)
returns <- dailyReturn(Cl(AMZN))
chartSeries(GOOGL, theme="white", name = "Retornos Diarios de Amazon")
addSMA(n = 10, on = 1, with.col = Cl, overlay = TRUE, col = "blue")
addSMA(n = 60, on = 1, with.col = Cl, overlay = TRUE, col = "black")
SMA()
returns <- dailyReturn(Cl(AMZN))
chartSeries(GOOGL, theme="white", name = "Retornos Diarios de Amazon")
addSMA(n = 10, on = 1, with.col = Cl, overlay = TRUE, col = "blue")
addSMA(n = 60, on = 1, with.col = Cl, overlay = TRUE, col = "black")
# SMA()
knitr::opts_chunk$set(echo = TRUE)
library(quantmod)
library(tidyverse)
library(lubridate)
FAANG <- c("AAPL", "GOOGL", "AMZN", "META", "NFLX")
fecha_inicio <- "2022-01-01"
fecha_finalizacion <- today()
getSymbols(FAANG, from=start_date, to= end_date)
colnames(merge(AAPL, GOOGL, AMZN, META, NFLX))
library(quantmod)
library(tidyverse)
library(lubridate)
FAANG <- c("AAPL", "GOOGL", "AMZN", "META", "NFLX")
fecha_inicio <- "2022-01-01"
fecha_finalizacion <- today()
getSymbols(FAANG, from=fecha_inicio, to= fecha_finalizacion)
colnames(merge(AAPL, GOOGL, AMZN, META, NFLX))
0
library(xts)
opdiarias_rv <- readRDS('Modulo #2 Importacion Avanzada y Casos Practicos/Semana 4- Casos Practicos/data/operaciones_diarias_rv.rds')
View(opdiarias_rv)
colnames(opdiarias_rv)
un_instrumento_frecuente <- opdiarias_rv %>% select('codigo_local'= `Cód. Local`,
fecha_operacion)
View(un_instrumento_frecuente)
View(un_instrumento_frecuente)
un_instrumento_frecuente <- opdiarias_rv %>% select('codigo_local'= `Cód. Local`,
fecha_operacion) %>%
group_by(codigo_local) %>%
summarise(total_dias= n_distinct(fecha_operacion))
View(un_instrumento_frecuente)
opdiarias_xts <- opdiarias_rv %>% select('codigo_local'= `Cód. Local`,
fecha_operacion, Precio) %>%
filter(codigo_local %in% c("CP1EX201", "CP1JF201"))
View(opdiarias_xts)
hist(un_instrumento_frecuente)
hist(un_instrumento_frecuente$total_dias)
hist(un_instrumento_frecuente$total_dias)
opdiarias_xts <- opdiarias_rv %>% select('codigo_local'= `Cód. Local`,
fecha_operacion, Precio) %>%
filter(codigo_local %in% c("CP1EX201", "CP1JF201"))
CP1EX201 <- opdiarias_xts %>%
filter(codigo_local %in% c("CP1EX201")) %>%
select(fecha_operacion, Precio)
typeof(CP1EX201$fecha_operacion)
typeof(CP1EX201$Precio)
CP1EX201 <- opdiarias_xts %>%
filter(codigo_local %in% c("CP1EX201")) %>%
select(fecha_operacion, Precio) %>%
mutate(fecha_operacion= as.Date(fecha_operacion),
Precio= as.numeric(Precio))
View(CP1EX201)
CP1EX201 <- opdiarias_xts %>%
filter(codigo_local %in% c("CP1EX201")) %>%
select(fecha_operacion, Precio) %>%
mutate(fecha_operacion= as.Date(fecha_operacion),
Precio= as.numeric(Precio)) %>%
group_by(fecha_operacion) %>%
summarise(
Open= mean(Precio, na.rm=TRUE),
High= max(Precio),
Low= min(Precio),
Close= mean(Precio, na.rm=TRUE))
)
CP1EX201 <- opdiarias_xts %>%
filter(codigo_local %in% c("CP1EX201")) %>%
select(fecha_operacion, Precio) %>%
mutate(fecha_operacion= as.Date(fecha_operacion),
Precio= as.numeric(Precio)) %>%
group_by(fecha_operacion) %>%
summarise(
Open= mean(Precio, na.rm=TRUE),
High= max(Precio),
Low= min(Precio),
Close= mean(Precio, na.rm=TRUE))
View(CP1EX201)
CP1EX201 <- opdiarias_xts %>%
filter(codigo_local %in% c("CP1EX201"))
View(CP1EX201)
CP1EX201 <- opdiarias_xts %>%
filter(codigo_local %in% c("CP1EX201")) %>%
select(fecha_operacion, Precio) %>%
mutate(fecha_operacion= as.Date(fecha_operacion),
Precio= as.numeric(Precio)) %>%
group_by(fecha_operacion) %>%
summarise(
Open= mean(Precio, na.rm=TRUE),
High= max(Precio),
Low= min(Precio),
Close= mean(Precio, na.rm=TRUE))
View(CP1EX201)
CP1EX201 <- xts(CP1EX201$High, order.by = CP1EX201$fecha_operacion)
colnames(CP1EX201)
colnames(CP1EX201)[1] <- "CP1EX201"
View(CP1EX201)
chartSeries(CP1EX201)
library(quantmod)
library(xts)
library(lubridate)
today()
FAANG <- c("AAPL", "GOOGL", "AMZN", "META", "NFLX")
fecha_inicio <- "2022-01-01"
fecha_final <- today()
getSymbols(Symbols = FAANG, from= fecha_inicio, to=fecha_final)
View(AAPL)
FAANG <- c("AAPL", "GOOGL", "AMZN", "META", "NFLX")
fecha_inicio <- "2010-01-01"
fecha_final <- today()
getSymbols(Symbols = FAANG, from= fecha_inicio, to=fecha_final)
View(AAPL)
View(NFLX)
merge(AAPL, GOOGL, AMZN, META, NFLX)
View(merge(AAPL, GOOGL, AMZN, META, NFLX))
colnames(merge(AAPL, GOOGL, AMZN, META, NFLX))
FAANG <- merge(Cl(AAPL), Cl(GOOGL), Cl(AMZN), Cl(META), Cl(NFLX))
View(FAANG)
dailyReturn(FAANG$AAPL.Close)
?dailyReturn
weeklyReturn(FAANG$AAPL.Close)
quarterlyReturn(FAANG$AAPL.Close)
annualReturn(FAANG$AAPL.Close)
allReturns(FAANG$AAPL.Close)
chartSeries(GOOGL, theme= 'white', "Retornos Diarios de Google")
chartSeries(GOOGL, theme= 'white', "Retornos Diarios de Google")
returns <- dailyReturn(cl(GOOGLE))
returns <- dailyReturn(Cl(GOOGLE))
returns <- dailyReturn(Cl(GOOGL))
chartSeries(returns, theme= 'white', "Retornos Diarios de Google")
hist(returns)
chartSeries(returns, theme= 'white', "Retornos Diarios de Google")
returns <- weeklyReturn(Cl(GOOGL))
chartSeries(returns, theme= 'white', "Retornos Diarios de Google")
hist(returns)
returns <- yearlyReturn(Cl(GOOGL))
chartSeries(returns, theme= 'white', "Retornos Diarios de Google")
hist(returns)
chartSeries(returns, theme= 'white', "Retornos Diarios de Google")
chartSeries(Cl(AAPL), theme= 'white', "Retornos Diarios de Google")
add_SMA(n= 10, on=1, with.col= cl, overlay=TRUE, col= "blue")
add_SMA(n= 10, on=1, with.col= Cl, overlay=TRUE, col= "blue")
chartSeries(Cl(AAPL), theme= 'white', "Retornos Diarios de Google")
add_SMA(n= 10, on=1, with.col= Cl, overlay=TRUE, col= "blue")
chartSeries(Cl(AAPL), theme= 'white', "Retornos Diarios de Google")
add_SMA(n= 60, on=1, with.col= Cl, overlay=TRUE, col= "blue")
chartSeries(AAPL, theme= 'white', "Retornos Diarios de Google")
add_SMA(n= 60, on=1, with.col= Cl, overlay=TRUE, col= "blue")
chartSeries(AAPL, theme= 'white', "Retornos Diarios de Google")
chartSeries(AAPL$AAPL.Close, theme= 'white', "Retornos Diarios de Google")
add_SMA(n= 60, on=1, with.col= Cl, overlay=TRUE, col= "blue")
add_SMA(n= 60, on=1, with.col= AAPL.Close, overlay=TRUE, col= "blue")
chartSeries(AAPL$AAPL.Close, theme= 'white', "Retornos Diarios de Google")
add_SMA(n= 60, on=1, with.col= AAPL$AAPL.Close, overlay=TRUE, col= "blue")
library(PerformanceAnalytics)
library(quantmod)
library(tidyverse)
fecha_inicio <- "2015-01-01"
fecha_final <- "2023-06-01"
getSymbols(
"^GSPC",
src= "yahoo",
from= fecha_inicio,
to=  fecha_final,
auto.assign =  TRUE,
warnings= FALSE)
SP500 <- GSPC
SP500_mensual <- to.monthly(SP500, indexAt = "lastof", OHLC= FALSE)
retornos_mensuales_SP500 <- Return.calculate(SP500_mensual, method= "log") %>%
na.omit
View(retornos_mensuales_SP500)
knitr::opts_chunk$set(echo = TRUE)
suppressWarnings(suppressPackageStartupMessages(library(PerformanceAnalytics)))
suppressWarnings(suppressPackageStartupMessages(library(quantmod)))
suppressWarnings(suppressPackageStartupMessages(library(tidyverse)))
precios_FAANG_vect <- c("AMZN", "META", "NFLX", "GOOGL", "AAPL")
fecha_inicio <- "2015-01-01"
fecha_final <- "2023-06-01"
precios_FAANG <- getSymbols(
precios_FAANG_vect,
src= "yahoo",
from= fecha_inicio,
to=  fecha_final,
auto.assign =  TRUE,
warnings= FALSE) %>%
map(~Ad(get(.))) %>%
reduce(merge)
colnames(precios_FAANG) <- (precios_FAANG_vect)
head(precios_FAANG)
precios_mensuales <- to.monthly(precios_FAANG, indexAt = "lastof", OHLC= FALSE)
head(precios_mensuales)
retornos_mensuales_FAANG <- Return.calculate(precios_mensuales,
method= "log") %>% na.omit
head(retornos_mensuales_FAANG)
write_rds(retornos_mensuales_FAANG, "retornos_mensuales_FAANG.rds")
retornos_mensuales_FAANG_largo <- retornos_mensuales_FAANG %>%
data.frame(fecha= index(.)) %>%
remove_rownames() %>%
pivot_longer(cols =all_of(precios_FAANG_vect),
names_to = "Stock", values_to = "Retornos")
unidos <- ggplot(retornos_mensuales_FAANG_largo, aes(x= Retornos)) +
geom_density(aes(color= Stock), alpha=0.5) +
geom_histogram(aes(fill= Stock), alpha=0.45, binwidth = .005) +
ggtitle("Retornos Mensuales desde en 2015 de las FAANG")
plot(unidos)
separados <-  ggplot(retornos_mensuales_FAANG_largo, aes(x= Retornos)) +
geom_density(aes(color= Stock), alpha=0.5) +
geom_histogram(aes(fill= Stock), alpha=0.45, binwidth = .005) +
facet_wrap(~Stock)
ggtitle("Retornos Mensuales desde en 2015 de las FAANG")
plot(separados)
fecha_final <- today()
library(lubridate)
fecha_inicio <-  "2015-01-01"
fecha_final <- today()
getSymbols("^GSPC",
src= "yahoo",
from= fecha_inicio,
to= fecha_final)
View(GSPC)
SP500 <- GSPC
SP500_mensual <- to.monthly(SP500, indexAt = "lastof", OHLC= FALSE)
View(SP500_mensual)
View(SP500)
to.yearly(SP500, indexAt = "lastof", OHLC= FALSE)
fecha_inicio <-  "2000-01-01"
fecha_final <- today()
getSymbols("^GSPC",
src= "yahoo",
from= fecha_inicio,
to= fecha_final)
SP500 <- GSPC
SP500_mensual <- to.monthly(SP500, indexAt = "lastof", OHLC= FALSE)
to.yearly(SP500, indexAt = "lastof", OHLC= FALSE)
precios_FAANG <- c("AMZN", "META", "NFLX", "GOOGL", "APPL")
fecha_inicio <-  "2015-01-01"
fecha_final <- today()
precios_FAANG <- c("AMZN", "META", "NFLX", "GOOGL", "APPL")
getSymbols(precios_FAANG,
src= "yahoo",
from= fecha_inicio,
to= fecha_final)
??map()
??purr:map()
??purrr:map()
??purrr::map()
Ad(AMZN)
getSymbols(precios_FAANG,
src= "yahoo",
from= fecha_inicio,
to= fecha_final) %>%
map(~Ad(get(.)))
View(getSymbols(precios_FAANG,
src= "yahoo",
from= fecha_inicio,
to= fecha_final) %>%
map(~Ad(get(.))))
View(AMZN)
getSymbols(precios_FAANG,
src= "yahoo",
from= fecha_inicio,
to= fecha_final) %>%
map(~Ad(get(.))) %>%
reduce(merge)
precios_FAANG_vect <- c("AMZN", "META", "NFLX", "GOOGL", "APPL")
precios_FAANG <- getSymbols(precios_FAANG_vect,
src= "yahoo",
from= fecha_inicio,
to= fecha_final) %>%
map(~Ad(get(.))) %>%
reduce(merge)
precios_FAANG_vect <- c("AMZN", "META", "NFLX", "GOOGL", "APPL")
precios_FAANG <- getSymbols(precios_FAANG_vect,
src= "yahoo",
from= fecha_inicio,
to= fecha_final) %>%
map(~Ad(get(.))) %>%
reduce(merge)
View(precios_FAANG)
precios_FAANG_vect <- c("AMZN", "META", "NFLX", "GOOGL", "AAPL")
precios_FAANG <- getSymbols(precios_FAANG_vect,
src= "yahoo",
from= fecha_inicio,
to= fecha_final) %>%
map(~Ad(get(.))) %>%
reduce(merge)
View(precios_FAANG)
precios_FAANG_mensual <- to.monthly(precios_FAANG, indexAt = "lastof", OHLC= FALSE)
View(precios_FAANG_mensual)
retornos_FAANG_mensual <- Return.calculate(precios_FAANG_mensual, method = "log")
View(retornos_FAANG_mensual)
retornos_FAANG_mensual <- Return.calculate(precios_FAANG_mensual, method = "log") %>%
na.omit()
View(retornos_FAANG_mensual)
typeof(retornos_FAANG_mensual)
retornos_mensuales_FAANG_largo <- retornos_FAANG_mensual %>%
data.frame(fecha= index(.))
View(retornos_mensuales_FAANG_largo)
retornos_mensuales_FAANG_largo <- retornos_FAANG_mensual %>%
data.frame(fecha= index(.)) %>%
remove_rownames()
View(retornos_mensuales_FAANG_largo)
retornos_mensuales_FAANG_largo <- retornos_FAANG_mensual %>%
data.frame(fecha= index(.)) %>%
remove_rownames() %>%
pivot_longer(cols=all_of(precios_FAANG_vect),
names_to = "Stock",
values_to= "Retornos"
)
precios_FAANG_vect
colnames(retornos_FAANG_mensual)
colnames(retornos_FAANG_mensual) <- precios_FAANG_vect
retornos_mensuales_FAANG_largo <- retornos_FAANG_mensual %>%
data.frame(fecha= index(.)) %>%
remove_rownames() %>%
pivot_longer(cols=all_of(precios_FAANG_vect),
names_to = "Stock",
values_to= "Retornos"
)
View(retornos_mensuales_FAANG_largo)
hist(retornos_mensuales_FAANG_largo$Retornos)
ggplot(retornos_mensuales_FAANG_largo, aes(x=Returnos)) +
geom_density(aes(color=Stpck), alpha=0.5)
ggplot(retornos_mensuales_FAANG_largo, aes(x=Returnos)) +
geom_density(aes(color=Stock), alpha=0.5)
ggplot(retornos_mensuales_FAANG_largo, aes(x=Retornos)) +
geom_density(aes(color=Stock), alpha=0.5)
ggplot(retornos_mensuales_FAANG_largo, aes(x=Retornos)) +
geom_density(aes(color=Stock), alpha=0.5) +
geom_histogram(aes(fill=Stock), alpha= 0.45)
ggplot(retornos_mensuales_FAANG_largo, aes(x=Retornos)) +
geom_density(aes(color=Stock), alpha=0.5) +
geom_histogram(aes(fill=Stock), alpha= 0.45, binwidth = .005)
ggplot(retornos_mensuales_FAANG_largo, aes(x=Retornos)) +
geom_density(aes(color=Stock), alpha=0.5) +
geom_histogram(aes(fill=Stock), alpha= 0.45, binwidth = .005) +
facet_wrap(~Stock)
qplot(Fecha, Return*100, data = retornos_mensuales_FAANG_largo, geom = "line",
group = Stock, color= Stock) +
labs(title= "Retornos Diarios de las acciones FAANG en %", y="Retornos Diarios en %") +
facet_grid(Stock ~ ., scale = "free_y") +
scale_x_date(date_breaks = "30 days") +
easy_rotate_x_labels(angle = 45, side = "right")
suppressPackageStartupMessages(library(quantmod))
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(PerformanceAnalytics))
suppressPackageStartupMessages(library(PortfolioAnalytics))
suppressPackageStartupMessages(library(lubridate))
precios_FAANG_vect <- c("AMZN", "META", "NFLX", "GOOGL", "AAPL")
fecha_inicio <- "2015-01-01"
fecha_final <- today()
precios_FAANG <- getSymbols(
precios_FAANG_vect,
src= "yahoo",
from= fecha_inicio,
to=  fecha_final,
auto.assign =  TRUE,
warnings= FALSE) %>%
map(~Ad(get(.))) %>%
reduce(merge)
colnames(precios_FAANG) <- (precios_FAANG_vect)
retornos_diarios_FAANG <- Return.calculate(precios_FAANG, method= "log") %>% na.omit
View(retornos_diarios_FAANG)
init <- portfolio.spec(assets=precios_FAANG_vect)
View(init)
init <- add.constraint(portfolio=init, type="leverage",
min_sum=0.99, max_sum=1.01)
init <- add.constraint(portfolio=init, type="box", min=0.05, max=0.65)
maxret <- add.objective(portfolio=init, type="return", name="mean")
View(maxret)
opt_maxret <- optimize.portfolio.rebalancing(R=retornos_diarios_FAANG, portfolio=maxret,
optimize_method="ROI",
trace=TRUE,
rebalance_on = "years",
training_period = 720,
rolling_window = 1)
chart.Weights(opt_maxret, main="Evolución de las Distribuciones de los\n Pesos de las Acciones Dado el Periodo de Rebalanceo")
